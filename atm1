#include<stdio.h>
#include<stdlib.h> 
#include<time.h> 

struct Account
{
	char name[100];//姓名 
	char tel[12];//电话 
	char idCard[19];//身份证	
	char username[19];//银行账号卡号
	char password[7];//密码 
	float money;//余额
	struct Account * next; //下一个账户结点的地址 
};

typedef struct Account Account; 

Account * head;//指向头结点的头指针
Account * tail;//指向尾结点的尾指针 

int loadData()//加载数据 
{
	FILE* fp=fopen("./ATM.txt","r");
	if(fp==NULL)
	{
		return 0;	
	} 
	else
	{
		while(!feof(fp))
		{
			//创建结点
			Account * newNode=(Account *)malloc(sizeof(Account)); 
			
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s\t%s\t%s\t%s\t%s\t%.2f\n",newNode->name,newNode->tel,newNode->idCard,newNode->username,newNode->password,&newNode->money); 
			
			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;	
			} 
			else
			{
				tail->next=newNode;
				tail=newNode; 
			}
		}
		fclose(fp);
		return 1;
	}
} 
void signUpChinese()
{
	int i=0;
	srand((unsigned)time(NULL));
	//申请一块堆内存空间，将其地址赋值给指针newNodeP（不理解局部变量和全局变量的同学们观看群里的视频C语言内存分配） 
	Account * newNodeP=(Account *)malloc(sizeof(Account));
	printf("请输入姓名：\n"); 
	scanf("%s",newNodeP->name);
	fflush(stdin);
	printf("请输入电话：\n");
	scanf("%s",newNodeP->tel); 
	fflush(stdin);
	printf("请输入身份证：\t");
	scanf("%s",newNodeP->idCard); 
	fflush(stdin);
	for(i=0;i<18;i++)
	{
		newNodeP->username[i]=rand()%10+'0';
	}
	printf("正在为你生成卡号。\n");
	printf("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");
	printf("\n");
	for(i=0;i<11;i++)
	{
		Sleep(100);
		printf("\\\\");
	}
	for(i=0;i<18;i++)
	printf("%c",newNodeP->username[i]);
	printf("\n请输入密码：\n");
	fflush(stdin);
	char re[7];
//	while(1)
//	{
		for(i=0;i<6;i++)
		{
		newNodeP->password[i]=getch(); 
		printf("*");
		}
		fflush(stdin);
//		printf("\n再次验证密码\n");
	
//		for(i=0;i<6;i++)
//		{
//		re[i]=getch(); 
//		printf("*");
//		}
		
//		if(strcmp(newNodeP->password,re)==0) break;//两次密码相同则退出循环 
		
//		else printf("\n两次密码不相同，请重新输入\n");
		
//	}	

	newNodeP->money=0.0f;
	newNodeP->next=NULL;
	
	//添加结点到链表中
	if(head==NULL)
	{
		head=newNodeP;
		tail=newNodeP;
	} 
	else
	{
		tail->next=newNodeP;
		tail=newNodeP;
	}
	
	printf("\n添加成功\n");
	system("pause");
}

int printLinkedList()
{
	Account *curp=head;
	while (curp->next!= NULL)
	{
		printf("%s\t%s\n",curp->name,curp->tel,curp->idCard,curp->username,curp->password,curp->money); ;
		curp=curp->next;
	}
	return 0;	
}
void saveDate()//保存数据 
{
	FILE* fp=fopen("./ATM.txt","w");
	if(fp==NULL)
	{
			
	} 
	Account *curp=head;
	int a=0;
	while (curp->next!= NULL)
	{
	
		fprintf(fp,"%s\t%s\t%s\t%s\t%s\t%.2f\n",curp->name,curp->tel,curp->idCard,curp->username,curp->password,curp->money); 
		curp=curp->next;
	}
	fclose(fp);	
}
int main()
{

	loadData();//加载数据 
	signUpChinese();//添加数据 
	saveDate();//保存数据 
	printLinkedList(); 
	printf("\n\n\n");
}
