#include<stdio.h>
#include<string.h>
#include<stdlib.h> 
#include<time.h> 

struct Transaction
{
    char username[100];
    time_t timestamp;
    int type;//0-取款，1-存款
    int amount;

    struct Transaction* next;
};
typedef struct Transaction Transaction;

//交易记录信息链表 
Transaction* tHead = NULL;
Transaction* tTail = NULL;


struct Account
{
    char username[19];//账户
    char password[7];//密码
    int money;//余额
    //char tel[12];//电话
   // char id[19];//身份证
    struct Account* next;//下一个账户节点的地址
};
typedef struct Account Account;

int language;//1-Chinese,2-English

Account a;

typedef struct Account Account;

Account* head = NULL;//指向头结点 
Account* tail = NULL;//指向尾结点 
Account* curAccount = NULL;//记录当前账户 
Account* otherAccount = NULL;//记录对方账户

//加载数据
void loadData()
{
    FILE* fp = fopen("D:/atm.txt", "r");
    if (fp != NULL)
    {
        while (!feof(fp))
        {
            //创建结点：在堆上申请一块内存空间，将其地址赋值给指针newNode
            Account* newNode = (Account*)malloc(sizeof(Account));
            if (newNode == NULL)
            {
                printf("分配内存失败");
                exit(-1);
            }

            //结点赋值：结点初始化
            newNode->next = NULL;
            fscanf_s(fp, "%s %s %d\n ", newNode->username, 19, newNode->password, 7, &newNode->money);

            //添加结点到链表
            if (head == NULL)
            {
                head = newNode;
                tail = newNode;
            }
            else
            {
                tail->next = newNode;
                tail = newNode;
            }
        }
        fclose(fp);
    }
}
